2020-01-02-yuny0623
1. yml 파일 없애기 (내껀 없앰. nari 님꺼 까지 없애면 끝)
2. jwt 완성하기
3. 엔티티 순환참조 문제 해결하기 (양방향으로 할지, 단방향으로 하고 객체 복사할지 선택하기)

2020-01-03-yuny0623
1. loginController + loginService 코드 정리하기 + 컨트롤러 - 서비스 분리해내기
2. yml 파일에 변수 설정하고 변수 불러다 쓰기 -> 보안상 이유 (jwt생성 해쉬키)

2020.01.07-yuny0623
1. MultipartFile 구현하기 -> 글 등록할때 사진까지 받을 수 있게 만들기
2. 깃헙 위키에 api 상세 적어놓기
3. 게시판 페이징 구현하기
4. 깃헙 위키 API 에서 board 하단 부분 수정하기 -> 마크다운왜적용안되지? <- 해결됨.
5. api 명세서 작성끝남 -> 내껀다작성완료. nari 님께서 남은 user페이지 하나 작성하시면 끝남.
결론: 페이징이랑 multipartFile만 구현하면 끝

2020.01.08-yuny0623
1. 배치히스토리엔티티에 있는 avgRate는 User엔티티 필드로 이동시켜야할듯
2. 배치히스토리엔티티에 있는 ManyToOne 매핑이 굳이 필요한지? 그냥 userId로 로그처럼 기록해도 되지 않을까.
3. 키워드로 게시판 검색 기능 완료했음.

2020.01.09-yuny0623
1. 닉네임으로 게시글 검색 기능 추가됨.
2. 인기 게시글 검색 기능 추가하기 (왜 spring data jpa를 쓴게 조금더 빠른 느낌이 있지? boardRepository2 > boardRepository?) -> 완료
3. 게시판(자유,부자,) 별로 페이징 가능하게 수정하기
4. multipartFile 구현하기 -> (https://gilssang97.tistory.com/43) 참고 하기

2020.01.10-yuny0623
1. 사진 업로드 초기 구현 완료 -> 저장되는거 확인함.
2. 사진 업로드 추가 테스트 진행하고 리팩토링 진행하기
3. 코인 예측 게임 마무리 짓기

2020.01.12-yuny0623
1. EC2에 올려서 테스트 진행해보기
2. jwt oauth 과정 간편화하기
3. oauth 코드에서 버그 찾기
4. oauth 로그아웃 기능 테스트하기

2020.01.17-yuny0623
1. aws ec2에 올려지는 것 까지 확인 -> 다만 hibernate ddl에 자잘한 오류 있음 (mysql 테이블 비우고 다시 진행해보기)
2. 사진 삭제 기능 추가 + 페이징 기능 구현 해놓기
3. 게시판별 페이징 기능 구현 완료됨.
4. OAuth 로그아웃 기능 구현하기 (인메모리말고 url로 구현하기)
5. 로그아웃 구현 완료
6. 로그인에서 hashMap 코드 걷어내기

